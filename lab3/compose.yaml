services:

  db:
    image: postgres:17.4-alpine3.21
    restart: unless-stopped
    env_file:
      - ./djangogirls.env
    volumes:
      - "~/docker_volumes/lab3/db:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  mydjangogirls_migration:
    build:
      context: .
      args:
        - IMAGE=python:3.11-alpine3.21
        - UID=101
        - GID=101
        - USERNAME=djangogirls
        - GROUPNAME=djangogirls
      dockerfile: Dockerfile
      tags: 
        - "mydjangogirls-postgres:python3.11-alpine3.21"
    pull_policy: build
    image: mydjangogirls-postgres:latest
    env_file:
      - ./djangogirls.env
    depends_on:
      db:
        condition: service_healthy

  mydjangogirls_start:
    image: mydjangogirls-postgres:latest
    env_file:
      - ./djangogirls.env
    ports:
      - 8000:8000/tcp
    command: python3 manage.py runserver 0.0.0.0:8000
    depends_on:
      mydjangogirls_migration:
        condition: service_completed_successfully
      db:
        condition: service_healthy

